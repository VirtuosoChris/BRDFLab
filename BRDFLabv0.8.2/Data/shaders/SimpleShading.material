/*
	Copyright (c) 2009.
		Adria Fores
		Sumanta N. Pattanaik
		Carles Bosch
		Xavier Pueyo

	Contact: adriafores@gmail.com	

	This file is part of BRDFLab.

    BRDFLab is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    BRDFLab is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with BRDFLab.  If not, see <http://www.gnu.org/licenses/>.
*/



// GLSL Vertex shader definition
vertex_program shadingVS glsl			
{
	source shadingVS.glsl
	
	default_params
	{
		param_named_auto worldMatrix world_matrix
		param_named_auto eyePos camera_position
		param_named_auto lightPos light_position 0
	}	
}

// GLSL Pixel shader definition
fragment_program shadingFS glsl
{
	source shadingFS.glsl
	
}


material simpleShadingMaterial
{


    // Material has one technique
	technique
	{
        // This technique has one pass
		pass
		{
            // Make this pass use the vertex shader defined above
			vertex_program_ref shadingVS	
			{
			}
            // Make this pass use the pixel shader defined above
			fragment_program_ref shadingFS	
			{
			}


		}
	}
}




material greenShading
{
   technique
   {
     pass
     {
		ambient 0. 0.2 0.
		diffuse 0. 0.6 0.
		specular 1. 1. 1. 25
     } 
   }
 }
 
 
 // GLSL Vertex shader definition
vertex_program GouraudVS glsl			
{
	source GouraudVS.glsl
	
	default_params
	{
		param_named_auto worldMatrix world_matrix
		param_named_auto eyePos camera_position
		param_named_auto lightPos light_position 0
	}	
}

// GLSL Pixel shader definition
fragment_program GouraudFS glsl
{
	source GouraudFS.glsl
	
}


material GouraudShading
{


    // Material has one technique
	technique
	{
        // This technique has one pass
		pass
		{
            // Make this pass use the vertex shader defined above
			vertex_program_ref GouraudVS	
			{
			}
            // Make this pass use the pixel shader defined above
			fragment_program_ref GouraudFS	
			{
			}


		}
	}
}
